# If this file fails to deploy, add your user as a cluster administrator:
# kubectl create clusterrolebinding <name here> --clusterrole=cluster-admin --user=<your.google.cloud.email@example.org>

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
  name: nginx-pv-claim
  namespace: baljan
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
  
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-ingress-controller
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: baljan
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: baljan
---
apiVersion: v1
data:
  traefik.toml: |
    # traefik.toml
    defaultEntryPoints = ["http","https"]
    [entryPoints]
      [entryPoints.http]
      address = ":80"
      [entryPoints.http.redirect]
      entryPoint = "https"
      [entryPoints.https]
      address = ":443"
      [entryPoints.https.tls]

      # The ADFS login flow requires that the login request originates from
      # www.baljan.org, so we must ensure that our users go there automatically.
      [entryPoints.https.redirect]
      regex = "^https://(baljan\\.org)(.*)"
      replacement = "https://www.$1$2"
      permanent = true

    [acme]
    email = "1337@baljan.org"
    storageFile = "/acme/acme.json"
    entryPoint = "https"
    onDemand = true
    caServer = "https://acme-v02.api.letsencrypt.org/directory"
    [acme.httpChallenge]
    entryPoint = "http"
    [[acme.domains]]
    main = "baljan.org"
    sans = ["www.baljan.org"]
kind: ConfigMap
metadata:
  name: traefik-conf
  namespace: baljan
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: traefik-ingress-lb
  name: traefik-ingress-controller
  namespace: baljan
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
      name: traefik-ingress-lb
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      containers:
      - args:
        - --configfile=/config/traefik.toml
        - --web
        - --kubernetes
        - --logLevel=DEBUG
        image: traefik:v1.7
        imagePullPolicy: Always
        name: traefik-ingress-lb
        ports:
        - containerPort: 80
          hostPort: 80
          protocol: TCP
        - containerPort: 443
          hostPort: 443
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /acme
          name: acme
      hostNetwork: true
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      volumes:
      - name: acme
        persistentVolumeClaim:
          claimName: nginx-pv-claim
      - configMap:
          name: traefik-conf
        name: config
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  name: baljan-ingress
  namespace: baljan
spec:
  rules:
  - host: baljan.org
    http:
      paths:
      - backend:
          serviceName: cafesys-django
          servicePort: 80
  - host: www.baljan.org
    http:
      paths:
      - backend:
          serviceName: cafesys-django
          servicePort: 80

