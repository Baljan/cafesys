version: "3.2"
services:
  blipp:
    image: baljan/blipp
    build: https://github.com/Baljan/baljans-balla-blipp.git
    env_file: .env
    environment:
      - NEXT_PUBLIC_BLIPP_API="http://localhost:5006"
    ports:
      - "8001:80"

  worker:
    image: baljan/cafesys
    build:
      context: .
    env_file: .env
    environment:
      DJANGO_REDIS_URL: redis://cache:6379/0
      DJANGO_DATABASE_URL: postgres://cafesys:cafesys@db:5432/baljan_local
    command: celery -A cafesys worker --beat -l info
    links:
      - cache
      - db

  web:
    image: baljan/cafesys
    build:
      context: .
    env_file: .env
    environment:
      DJANGO_REDIS_URL: redis://cache:6379/0
      DJANGO_DATABASE_URL: postgres://cafesys:cafesys@db:5432/baljan_local
    depends_on:
      cache:
        condition: service_healthy
      db:
        condition: service_healthy
    command: gunicorn -c gunicorn-conf.py cafesys.wsgi
    ports:
      - "5006:5006"
    volumes:
      # Mount static files after build
      - ./cafesys/baljan/static:/app/cafesys/baljan/static

  db:
    image: postgres:15.7-alpine
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
    ports:
      # This gives us a Postgres server listening on the host as well.
      # This can be useful for development outside the Docker environment.
      - 5432:5432
    volumes:
      - ./database:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  cache:
    image: redis:3-alpine
    env_file: .env
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    ports:
      # This gives us a Redis server listening on the host as well.
      # This can be useful for development outside the Docker environment.
      - 6379:6379
