# Generated by Django 5.2.1 on 2025-06-08 14:07

import cafesys.baljan.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def transfer_balance_codes(apps, schema_editor):
    OldBalanceCode = apps.get_model("baljan", "OldBalanceCode")
    PhysicalBalanceCode = apps.get_model("baljan", "PhysicalBalanceCode")
    db_alias = schema_editor.connection.alias

    for x in OldBalanceCode.objects.using(db_alias).all():
        PhysicalBalanceCode.objects.using(db_alias).create(
            id=x.id,
            code=x.code,
            value=x.value,
            currency=x.currency,
            used_at=x.used_at,
            used_by=x.used_by,
            refill_series=x.refill_series,
            # BalanceCode.type should have no default value, thats why I added this
            type=cafesys.baljan.models.BalanceCode.Type.PHYSICAL
        )
        
        # This is to override the made parameter, which would be overridden in the create step above
        PhysicalBalanceCode.objects.using(db_alias).filter(id=x.id).update(made=x.made)

# To prevent creating BalanceCodes with ids that already exists by moving the PK index forward
def update_pk_index(_, schema_editor):
    with schema_editor.connection.cursor() as cursor:
        # Rename sequence to original name
        cursor.execute("ALTER SEQUENCE baljan_balancecode_id_seq1 RENAME TO baljan_balancecode_id_seq;")

        # Get max id
        cursor.execute("SELECT MAX(id) FROM baljan_balancecode;")
        max_id = cursor.fetchone()[0] or 0

        # Set the next id to max_id + 1
        next_id = max_id + 1

        # Update the sequence
        cursor.execute("ALTER SEQUENCE baljan_balancecode_id_seq RESTART WITH %s;", [next_id])



class Migration(migrations.Migration):

    dependencies = [
        ('baljan', '0022_support_filter'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RenameModel(
            old_name='BalanceCode',
            new_name='OldBalanceCode',
        ),
        migrations.CreateModel(
            name='BalanceCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('made', models.DateTimeField(auto_now_add=True, help_text='when the object was created', verbose_name='made at')),
                ('type', models.SmallIntegerField(choices=[(0, 'Physical'), (1, 'Digital')], null=False, editable=False),),
                ('value', models.PositiveIntegerField(default=315, verbose_name='value')),
                ('currency', models.CharField(default='SEK', help_text='currency', max_length=5, verbose_name='currency')),
                ('used_at', models.DateField(blank=True, null=True, verbose_name='used at')),
                ('used_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='used by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DigitalBalanceCode',
            fields=[
                ('balancecode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='baljan.balancecode')),
                ('checkout_id', models.CharField(unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('baljan.balancecode',),
        ),
        migrations.CreateModel(
            name='PhysicalBalanceCode',
            fields=[
                ('balancecode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='baljan.balancecode')),
                ('code', models.CharField(default=cafesys.baljan.models.generate_balance_code, help_text="To create a bulk of codes, <a href='../../refillseries/add'>create a new refill series</a> instead.", max_length=8, unique=True, verbose_name='code')),
                ('refill_series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='baljan.refillseries', verbose_name='refill series')),
            ],
            options={
                'verbose_name': 'physical balance code',
                'verbose_name_plural': 'physical balance codes',
                'ordering': ('-id', '-refill_series__id'),
            },
            bases=('baljan.balancecode',),
        ),
        migrations.CreateModel(
            name='BalanceCodeProxy',
            fields=[
            ],
            options={
                'verbose_name': 'balance code',
                'verbose_name_plural': 'balance codes',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('baljan.balancecode',),
        ),
        migrations.RunPython(transfer_balance_codes),
        migrations.DeleteModel("OldBalanceCode"),
        migrations.RunPython(update_pk_index)
    ]
