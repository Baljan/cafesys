@import url("https://fonts.googleapis.com/css?family=Exo:300,400,600,700,800,900&subset=latin-ext");
/*! normalize.css v2.1.3 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* ==========================================================================
   Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* ==========================================================================
   Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent;
}

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* ==========================================================================
   Typography
   ========================================================================== */
/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}

/**
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap;
}

/**
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* ==========================================================================
   Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0;
}

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden;
}

/* ==========================================================================
   Figures
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0;
}

/* ==========================================================================
   Forms
   ========================================================================== */
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/* ==========================================================================
   Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

.icon {
  background: url("../img/svg/sprite.svg") no-repeat;
}

.icon-facebook-example-icon {
  background-position: 0 0;
  width: 52px;
  height: 52px;
}

.icon-logo {
  background-position: 0 37.44239631336406%;
  width: 52px;
  height: 45.12px;
}

.icon-pattern {
  background-position: 0 65.29850746268657%;
  width: 52px;
  height: 33.92px;
}

.icon-sparkle {
  background-position: 0 100%;
  width: 51.58px;
  height: 52px;
}

html {
  box-sizing: border-box;
  font-size: 1em;
  height: 100%;
}

*, *:before, *:after {
  box-sizing: inherit;
}

body {
  color: #404040;
  font: 18px/1 -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Arial", sans-serif;
  overflow-x: hidden;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
}

.h4, h4 {
  font-size: 1.25em;
}

.h3, h3 {
  font-size: 1.5625em;
}

.h2, h2 {
  font-size: 1.95312em;
}

.h1, h1 {
  font-size: 2.44141em;
}

a {
  background: transparent;
  color: #e6008b;
  text-decoration: none;
  transition: color .2s;
}

a:hover, a.active, a.current-menu-item {
  color: #b3006c;
}

p {
  color: rgba(64, 64, 64, 0.9);
  font-weight: 400;
  line-height: 1.5;
  margin: 0;
  margin-bottom: 15px;
}

small,
.small {
  color: #404040;
  font-size: 15px;
  line-height: 1;
}

strong {
  font-weight: 800;
}

b {
  font-weight: 600;
}

img {
  height: auto;
  max-width: 100%;
}

body.fixed-navbar main.bd-masthead {
  padding-top: 122px;
}

.Baljan__header {
  margin-top: 15px;
}

.navbar-brand {
  padding-right: 10px;
}

.navbar {
  transition: all 300ms;
  width: 100%;
  z-index: 10;
}

.navbar.fixed {
  position: fixed;
  background: #FFF;
  box-shadow: 0 2px 5px -1px rgba(0, 0, 0, 0.09);
}

.navbar.fixed .btn {
  background-color: #e6008b;
  color: white;
}

.navbar.fixed .btn:hover {
  background-color: transparent;
  color: #e6008b;
}

.navbar ul li a {
  font-family: "Lobster", cursive;
  color: #2f308c;
  font-size: 1.2rem;
  border: 2px solid transparent;
}

.navbar ul li a:hover {
  color: #00a4e0;
}

.navbar ul li a:hover i {
  opacity: 0.8;
}

.navbar ul li a i {
  color: #e6008b;
  margin-right: 5px;
  font-size: 1.5rem;
}

.navbar ul li a + media-breakpoint-down(md) {
  color: green;
  background: green;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
}

.contact-btn {
  font-weight: bold;
  margin-right: 15px;
  color: #2f308c;
}

.contact-btn:hover {
  text-decoration: none;
  color: #00a4e0;
}

.Baljan__footer {
  padding-bottom: 80px;
}

.Baljan__footer .pattern {
  margin-bottom: 40px;
}

address {
  font-style: normal;
}

figure {
  margin: 0;
}

.br {
  margin-bottom: 15px;
}

.bold {
  font-size: bold;
}

.lobster {
  font-family: 'Lobster', cursive;
}

.wrapper {
  padding: 20px 0;
}

.wrapper--md {
  padding: 40px 0;
}

.wrapper--lg {
  padding: 80px 0;
}

h1 {
  color: #2f308c;
  font-size: 3.2rem;
}

.jumbotron h3 {
  color: #e6008b;
  font-size: 2rem;
}

.pattern {
  background-image: url(../img/svg/pattern.svg);
  /* background-image: url(pattern-small.png); */
  background-size: auto 100%;
  background-repeat: repeat-x;
  background-position: center;
  height: 30px;
  position: relative;
}

.info-icon {
  text-align: center;
}

.info-icon .fa {
  margin-top: 20px;
  font-size: 6em;
}

.info-panel .info-icon, .info-panel .info-text {
  float: none;
  display: inline-block;
  vertical-align: middle;
  margin-right: -4px;
}

.btn {
  font-weight: bold;
}

.btn-outline-primary {
  border-color: #e6008b;
  color: #e6008b;
  border-width: 2px;
}

.btn-outline-primary:hover, .btn-outline-primary:active {
  background-color: #e6008b;
  border-color: #e6008b;
  color: white;
}

.btn-outline-primary:active, .btn-outline-primary:focus {
  box-shadow: 0 0 0 3px rgba(230, 0, 139, 0.5);
}

.btn-outline-info {
  border-color: #00a4e0;
  color: #00a4e0;
  border-width: 2px;
}

.btn-outline-info:hover, .btn-outline-info:active {
  background-color: #00a4e0;
  border-color: #00a4e0;
  color: white;
}

.btn-outline-info:active, .btn-outline-info:focus {
  box-shadow: 0 0 0 3px rgba(230, 0, 139, 0.5);
}

.btn-primary {
  background-color: #00a4e0;
  border-color: #00a4e0;
  color: white;
}

.btn-primary:hover, .btn-primary:active {
  background-color: #2f308c;
  border-color: #2f308c;
  color: white;
}

.btn-primary:active, .btn-primary:focus {
  box-shadow: 0 0 0 3px rgba(0, 164, 224, 0.5);
}

.int {
  background-color: #f2f2f2;
  background-image: none;
  border-radius: 0;
  border: 0;
  border: 1px solid #ccc;
  color: #e6008b;
  display: block;
  padding: 10px;
  font-size: 18px;
  line-height: 1;
  transition: all .3s;
  width: 100%;
  outline: none;
}

.int::-ms-expand {
  border: 0;
  background-color: transparent;
}

.int:focus {
  border-color: #e6008b;
}

@media print {
  *:before, :before, *:after, :after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  a,
  a:visited {
    text-decoration: underline;
  }
  a[href]:after {
    content: " (" attr(href) ")";
  }
  abbr[title]:after {
    content: " (" attr(title) ")";
  }
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: "";
  }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
